/*****************************************************************************************************************
 *
 *    sqlcon system configuration file
 *
 ****************************************************************************************************************/
//### editor: application to open log fie and output file
editor = "notepad.exe";

//### input/output file name 
// C:\Users\your name\Documents
directory = mydoc();        

output = format("{0}\\output\\sqlcon{1}.sql", directory, DateTime.Now.ToString("yyyyMMdd_hhmmss"));
log = format("{0}\\logs\\sqlcon{1}.log", directory, DateTime.Now.ToString("yyyyMMdd_hhmmss"));
xmldb = format("{0}\\db", directory);

//paths of command file *.sqc 
path = "c:\\bin\\sqlcon;d:\\bin\\sqlcon";

options = {
    Comparison: {
        IgnoreCase: true,
    }
};

console = {
	table: {
		//### table console grid setting
		grid: {
			MaxColumnWidth: 50,
			MaxRows: 200
		}
	}
};

gui = {
    table: {
	    //### table editor setting
		//color can be color string or hexadecimal color code "#AARRGGBB", for instance, "#FF9BD79B"
        editor: {
            AlternatingRowBackground: "DimGray",
            Foreground: "LightGray",
            Background: "LightGray",
            RowBackground: "Black"
        }
    },
    //### sql editor setting
    //color can be color string or hexadecimal color code "#AARRGGBB", for instance, "#FF9BD79B"
    sql: {
        editor: {
            Foreground: "White",
            Background: "Black"
        },
        result: {
            table: {
                Foreground: "White",
                Background: "Black",
                AlternatingRowBackground: "DimGray",
                RowBackground: "Black"
            },
            message: {
                Foreground: "White",
                Background: "Black"
            }
        }
    }
};


generator = {
    //### dpo class
    dpo : {
        path: directory + "\\DataModel\\Dpo",			// place to generate classes
        ns: "Sys.DataModel.Dpo",						// name space
        suffix: "Dpo",									// class name suffix
        level: 2,										// {0:Fixed, 1:System, 2:Application}
        HasProvider: false,							    // data base provider
        hasTableAttr: true,							    // create Table Attribute or not
        hasColumnAttr: true,							// create Column Attribute or not
        IsPack: true,
        rule: function (name) { return name; }
    },

    //### data contract class
    dc : {
        path: directory + "\\DataModel\\DataContracts",	//place to generate classes
        ns: "Sys.DataModel.DataContracts",				//name space
    },

    //### Linq to SQL class
    l2s : {
        path : directory + "\\DataModel\\L2s",		    //place to generate classes
        ns : "Sys.DataModel.L2s",					    //name space
    },

    //### data enum class
    de : {
        path: directory + "\\DataModel\\DataEnum",		//place to generate classes
        ns: "Sys.DataModel.DataEnum",
    },

	//### dataset xml file
	ds: {
		path : directory + "\\ds",
	},

    //### csv
    csv: {
        path : directory + "\\csv",						//place to generate csv files
    },
};



//### sql server connection-string library
servers = {
    //local		: @"data source=localhost\sqlexpress;initial catalog=master;integrated security=SSPI;packet size=4096",
    //xml		: format("provider=xmlfile;data source=file://{0};initial catalog=xml;User Id=;Password=",schema),	

    //###　search connection string in web.config and app.config files 
    //web		: config(@"C:\inetpub\wwwroot\Web.config", "appSettings|key=connectionName", "value"),					//defined on the <appSettings/>
    //app		: config(@"C:\bin\medsys.exe.config", "connectionStrings|name=connectionName", "connectionString"),		//defined on the <connectionStrings/>
    //ws		: cfg(@"C:\inetpub\wwwroot\Web.cfg", "defaultconnection"),
};

//### the default sql server, ~ is initial catalog defined on the connection string	
//home = "\\local\\~";
//home = "\\local\\Northwind\dbo.Products";

//### limitation
limit =
    {
        top: 1000,	//number of row returned on command [type]
        export_max_count: 2000
    };


//## define variables used on the command line
Context = 
{
   GitHub : "c:\\repos",	            //use variable "GitHub" in command line
   SRC : "c:\\src",
};



//### include configuration file
	//include("file://c:\\demos\\user.txt");
	//include("http://www.datconn.com/demos/user.txt");
	//include("ftp://username:pwd@ftp.datconn.com:21/demo/user.txt");

/*****************************************************************************************************************
 *    end of configuration file
 ****************************************************************************************************************/
